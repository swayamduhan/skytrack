'use client'

import { fetchUserCards } from "@/app/lib/fetchUserCards"
import { cards, darkMode, loadingResults } from "@/store/atoms"
import { useAtom, useAtomValue } from "jotai"
import { useSession } from "next-auth/react"
import { useEffect, useState } from "react"

interface CardInfo {
    origin : string;
    destination : string;
    startTime : string;
    endTime : string;
    nonStop : boolean;
    departureDate : string;
}

const decoyCards : CardInfo[] = [
    {
        origin : "Delhi",
        destination : "Dubai",
        startTime : "1400",
        endTime : "1800",
        nonStop : true,
        departureDate : "19 Jan 2025"
    },
    {
        origin : "Delhi",
        destination : "Dubai",
        startTime : "1400",
        endTime : "1800",
        nonStop : true,
        departureDate : "19 Jan 2025"
    },
    {
        origin : "Delhi",
        destination : "Dubai",
        startTime : "1400",
        endTime : "1800",
        nonStop : true,
        departureDate : "19 Jan 2025"
    },
    {
        origin : "Delhi",
        destination : "Dubai",
        startTime : "1400",
        endTime : "1800",
        nonStop : true,
        departureDate : "19 Jan 2025"
    },
    {
        origin : "Delhi",
        destination : "Dubai",
        startTime : "1400",
        endTime : "1800",
        nonStop : true,
        departureDate : "19 Jan 2025"
    }
]

export function CardComponent(){
    const [userCards, setUserCards] = useAtom(cards)
    const [loading, setLoading] = useState(loadingResults)
    const { data : session, status } = useSession()

    useEffect(()=>{
        fetchUserCards(setUserCards, setLoading, session?.user?.id)
    }, [])

    return (
        <div className="w-full h-full max-h-[600px] py-4 font-satoshi text-black dark:text-white">
            {status === "unauthenticated" ?
            <CenteredText>Please login first!</CenteredText>
            :
            (
                decoyCards.length === 0 ?
                <CenteredText>Fill the details and click on Favourite button to save a card!</CenteredText>
                : 
                <Cards userCards={decoyCards}/>
            )}
        </div>
    )
}

const CenteredText = ({children} : { children : any}) => {
    return (
        <div className="h-full flex justify-center items-center">
            <p className="text-2xl p-48 font-bold">
                {children}
            </p>
        </div>
    )
}


const Cards = ({ userCards } : { userCards : CardInfo[]}) => {
    const isDark = useAtomValue(darkMode)
    return (
        <div className="h-full w-full grid grid-cols-2 p-6 gap-6 overflow-y-auto">
            {userCards.map((card, index)=>(
                <div key={index} className="rounded-md p-4 min-h-[200px] flex flex-col shadow-md dark:shadow-xl border border-slate-700">
                    <div className="flex justify-around items-center text-xl font-bold">
                        <div>{card.origin}</div>
                        <ArrowSVG fill={isDark ? "#fff" : "#000"}/>
                        <div>{card.destination}</div>
                    </div>
                    <div className="w-full border-b dark:border-slate-700 border-slate-300"></div>
                    <div>
                        Range : {card.startTime} - {card.endTime}
                    </div>
                </div>
            ))}
        </div>
    )
}


const ArrowSVG = ({ fill } : { fill : any}) => {
    return (
        <svg
        width="20mm"
        height="13mm"
        viewBox="0 0 72 26"
        version="1.1"
        id="svg1"
        xmlns="http://www.w3.org/2000/svg">
        <defs
            id="defs1" />
        <g
            id="layer1">
            <path
            fill={fill}
            className="stroke-width:0.264583"
            id="path2"
            d="m 4.7189792,15.772935 c 1.325977,-1.047242 2.810426,-1.828813 4.392942,-2.42503 1.0396438,-0.391689 2.0926928,-0.75542 3.1669298,-1.038783 1.48178,-0.390869 2.994289,-0.654244 4.491434,-0.981364 4.960917,-0.742963 5.863675,-0.969542 10.964762,-1.348557 1.91393,-0.142209 3.831386,-0.25417 5.750224,-0.291643 1.941669,-0.03792 3.885102,-0.008 5.825747,0.06558 4.4134,0.167294 6.337606,0.44967 10.65222,0.918964 3.912446,0.584814 4.395882,0.61708 8.079208,1.30718 0.944628,0.176985 1.884026,0.380854 2.826596,0.568494 0.665779,0.13254 1.329791,0.274831 1.998438,0.392052 0.39696,0.06959 0.800317,0.237728 1.197285,0.168185 0.16643,-0.02916 0.183094,-0.284033 0.274642,-0.426048 C 62.94236,11.847808 61.629386,10.853173 60.148267,10.179493 59.431437,9.853447 58.607088,9.852693 57.830602,9.721468 56.653894,9.522602 55.476752,9.316758 54.290165,9.189467 51.19264,8.857183 46.123197,8.604831 43.117091,8.525935 c -2.129597,-0.05589 -4.260461,-0.04104 -6.39069,-0.06156 -7.579447,0.02851 -15.150198,0.553283 -22.661115,1.562772 -2.745109,0.368951 -4.3638778,0.654627 -7.0085538,1.092486 -3.291236,0.590677 -1.190196,0.203194 -3.88713,0.719635 -0.331378,0.06345 -0.660014,0.144523 -0.994634,0.187743 -0.134602,0.01738 -0.520926,-0.08062 -0.407107,-0.0067 3.556873,2.310262 2.326716,2.481143 4.506227,1.674733 0.956567,-0.25518 1.902608,-0.553712 2.8697,-0.76554 3.2204648,-0.705398 6.7891038,-1.230982 10.0390608,-1.609601 4.143147,-0.482674 8.439578,-0.828932 12.609025,-0.939591 2.125377,-0.05641 4.252249,-0.0011 6.378371,-0.0013 5.555909,0.120026 11.085896,0.698884 16.557673,1.654096 2.404345,0.419729 5.474851,1.084543 7.887025,1.656363 0.942425,0.223406 1.878404,0.473173 2.817606,0.709758 0.06098,0.01672 2.958113,0.821663 3.397568,0.911754 0.227539,0.04665 0.488852,0.17916 0.69338,0.06908 0.166695,-0.08972 0.251161,-0.363646 0.179414,-0.538829 C 69.474456,14.283413 67.346796,12.771846 67.307352,12.741038 63.604908,9.854828 59.879099,6.98475 56.361135,3.872855 56.209989,2.828876 56.176011,2.461997 53.423279,2.922641 c -0.591463,0.09898 0.924954,0.763514 1.386675,1.146186 1.575123,1.305454 3.1534,2.604786 4.748978,3.885192 1.506672,1.212942 2.483289,2.022443 4.785296,2.262174 0.432213,0.04501 -0.568754,-0.658688 -0.880962,-0.960945 C 62.500916,8.32357 61.090073,7.178843 60.087035,6.339381 58.220905,4.84613 55.85018,2.690303 53.590802,2.024169 c -0.341918,-0.100809 0.02445,0.752888 0.229473,1.044496 0.402037,0.571817 3.32731,2.92386 3.605961,3.154942 3.714182,2.847483 0.982152,0.772864 4.62769,3.491018 0.649814,0.48451 1.313833,0.950899 1.945108,1.459331 0.536647,0.432215 1.883095,1.452896 2.094124,2.31903 0.08132,0.33378 -0.114207,0.677527 -0.17131,1.016291 -0.350411,0.402334 -0.658934,0.845389 -1.051231,1.206998 -1.002911,0.924456 -2.734265,2.070372 -3.854823,2.782472 -1.102509,0.70063 -2.495897,1.517245 -3.68236,2.121773 -0.313243,0.159602 -0.640593,0.289851 -0.96089,0.434776 1.107202,0.558007 2.149366,1.270127 3.321603,1.674016 0.174776,0.06022 0.259374,-0.263469 0.388578,-0.395679 0.377578,-0.386371 0.740743,-0.787302 1.131763,-1.160063 1.436507,-1.369425 2.989511,-2.614853 4.523718,-3.87106 0.366996,-0.300395 0.729462,-0.606409 1.100985,-0.901189 1.402228,-1.112584 2.459802,-1.249948 -2.91129,-2.324188 -0.434446,-0.08689 -0.627333,0.625915 -0.948161,0.931466 -1.475139,1.404895 -1.643348,1.525701 -3.236,2.933959 -0.677571,0.540375 -1.888524,1.568104 -2.720043,2.041755 -0.18464,0.105178 -0.776338,0.08886 -0.601851,0.210138 4.101624,2.85083 2.551729,2.547069 3.774054,1.107556 0.308441,-0.363246 0.65441,-0.692877 0.981615,-1.039315 0,0 -3.079523,-1.895769 -3.079523,-1.895769 v 0 c -0.379936,0.332481 -0.775411,0.647999 -1.139809,0.997442 -0.243813,0.233807 -0.909875,0.500224 -0.681998,0.749592 0.901026,0.985975 2.15365,1.610354 3.36087,2.181857 0.180001,0.08521 0.318773,-0.239207 0.470681,-0.367991 0.847473,-0.71847 1.648859,-1.490334 2.509549,-2.193594 1.050316,-0.870453 2.342388,-1.969151 3.452524,-2.787846 0.371485,-0.27396 1.385395,-0.375388 1.149482,-0.772123 -2.338168,-3.932097 -2.292104,-2.869797 -3.466433,-1.691214 -0.325829,0.32701 -0.669653,0.635583 -1.004478,0.953374 -1.352208,1.187775 -1.508209,1.34026 -2.949561,2.537708 -0.535845,0.44517 -1.079979,0.880272 -1.618507,1.322195 -0.436853,0.358489 -0.89096,0.697269 -1.307626,1.079034 -0.315352,0.288941 -1.182145,0.62234 -0.884531,0.929518 0.915376,0.944788 2.345306,1.192345 3.517958,1.78852 2.097714,-1.488355 4.346498,-2.743226 6.48145,-4.17585 0.650647,-0.436605 1.318056,-0.854758 1.919184,-1.357365 0.468657,-0.391846 0.851152,-0.876504 1.276729,-1.314757 0.08173,-0.428133 0.336319,-0.858171 0.245189,-1.284401 C 69.225002,14.008474 67.70646,12.878735 67.115783,12.411766 66.456079,11.890228 65.761074,11.414967 65.083543,10.91681 61.981065,8.635699 63.569539,9.831367 60.492932,7.463058 59.845266,6.909925 59.1798,6.376978 58.54993,5.803658 58.119643,5.412003 57.786916,4.91031 57.314791,4.570255 57.124633,4.433291 56.834927,4.529635 56.628105,4.419429 55.688554,3.918771 54.848372,3.243512 53.903696,2.752588 c -1.133261,-0.588925 5.070795,3.26639 3.049627,2.319446 1.499738,1.279909 1.775772,1.468687 3.10229,2.758681 0.24997,0.243091 0.423127,0.579819 0.72536,0.753697 1.189551,0.684364 2.464922,1.207527 3.705093,1.795196 C 65.089567,10.665585 60.781799,8.48894 62.823448,9.261717 61.346282,8.112938 61.160158,7.987954 59.668927,6.741031 59.143361,6.301572 58.623222,5.855579 58.106999,5.405182 57.707047,5.056228 57.381842,4.605727 56.92057,4.343128 55.562321,3.569884 54.107076,2.98077 52.690063,2.321355 c -0.09431,-0.04389 0.172833,0.115813 0.259249,0.17372 3.722306,2.966109 7.396083,5.99286 11.126756,8.948618 0.0011,7.94e-4 1.655585,1.43066 2.102331,1.66034 0.07445,0.03828 0.334759,0.0011 0.251127,-0.0026 -0.17022,-0.0075 -0.342472,0.01558 -0.511085,-0.0089 -0.635061,-0.09236 -2.70092,-0.585809 -3.083126,-0.673651 C 59.427442,11.675684 56.016494,10.954239 52.568624,10.415433 48.75869,9.820047 46.154039,9.501774 42.263723,9.254145 c -1.9924,-0.12682 -3.989436,-0.165499 -5.984153,-0.24825 -2.123273,0.0072 -4.247287,-0.03475 -6.36982,0.02177 -4.267401,0.113623 -8.520938,0.444786 -12.769231,0.846098 -4.658299,0.440044 -9.3043068,1.011608 -13.9271868,1.73469 -2.28232598,0.589082 -1.882299,0.147402 1.748867,2.661087 0.08785,0.06081 0.198777,-0.07873 0.300121,-0.11258 0.285167,-0.09524 0.570633,-0.190008 0.859138,-0.274604 0.483444,-0.141755 0.968652,-0.277817 1.456307,-0.404328 0.701567,-0.182004 1.407335,-0.347416 2.111004,-0.521123 2.6694118,-0.586611 3.7957328,-0.865317 6.6328148,-1.336294 7.362444,-1.222219 14.822802,-1.764909 22.283769,-1.786991 2.149075,0.03825 4.299569,0.02774 6.447223,0.11474 4.052089,0.16415 7.66485,0.457406 11.658883,1.064818 1.267754,0.192799 2.526612,0.447154 3.775607,0.737648 0.869696,0.202276 2.242757,1.568243 2.574682,0.739322 0.340725,-0.850889 -1.481511,-1.079606 -2.222267,-1.619409 0.08197,0.0086 0.328252,0.02938 0.245906,0.02588 -0.336891,-0.01434 -0.674844,-0.02048 -1.009904,-0.05837 C 59.46678,10.769419 58.861784,10.670604 58.256435,10.57673 54.838395,10.046685 55.96131,10.155399 52.104225,9.625825 50.674636,9.429544 49.241706,9.25843 47.810445,9.074733 43.520462,8.673087 41.702885,8.441436 37.309209,8.29549 35.359794,8.23074 33.408193,8.191413 31.4581,8.23072 c -1.921643,0.03874 -3.841094,0.163382 -5.758352,0.298778 -5.15166,0.363804 -6.154806,0.565089 -11.198349,1.215244 -1.596605,0.270553 -3.206094,0.473753 -4.7898128,0.811655 -1.478755,0.315507 -4.329723,1.18355 -5.85703,1.792946 -0.856365,0.341691 -1.624262,0.86564 -2.453785,1.261102 z" />
        </g>
        </svg>
    )
}